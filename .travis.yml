# Travis CI Job Lifecycle
#  1 - apt addons (OPTIONAL)
#  2 - cache components (OPTIONAL)
#  3 - before_install
#  4 -- install
#  5 - before_script
#  6 -- script
#  7 - before_cache (if and only if caching is effective)
#  8 - after_success (Runs if script was successful) OR after_failure (Runs if script failed)
#  9 - before-deploy (OPTIONAL)
# 10 - deploy (OPTIONAL)
# 11 - after-deploy (OPTIONAL)
# 12 - after_script

language: cpp
dist: trusty
compiler: gcc
sudo: required
branches:
  only:
    - master
# Build your code
# Modify these variables that will be used in generateDocumentationAndDeploy.sh
# (see below). They tell Doxygen where to find the source on and where to send
# the generated documentation.
env:
  global:
    - GH_REPO_NAME: "2020_GROUP_21"
    - DOXYFILE: $TRAVIS_BUILD_DIR/Doxyfile
    - GH_REPO_REF: github.com/KurusView/2020_GROUP_21.git
# The virtual machines created by Travis do not by default have doxygen
# installed. This is fortunately not difficult on a Debian flavoured Linux
# system.
addons:
  apt:
    packages:
      - doxygen
      - graphviz

before_install:
  - sudo add-apt-repository ppa:beineri/opt-qt58-trusty -y

install:
  - sudo apt-get install qt58base qt58svg qt58charts-no-lgpl qt58xmlpatterns
  - source /opt/qt58/bin/qt58-env.sh

script:
  - /opt/qt58/bin/qmake PREFIX=/usr
  - make
  - sudo apt-get -y install checkinstall
  - sudo checkinstall --pkgname=app --pkgversion="1" --pkgrelease="1" --backup=no --fstrans=no --default --deldoc
  - mkdir -p appdir/usr/bin ; cd appdir
  - dpkg -x ../app_1-1_amd64.deb . ; find .
  - mv ./usr/local/bin/* ./usr/bin/
  - cp ./usr/share/icons/hicolor/48x48/apps/KuruView.png .
  - cp ./usr/share/applications/KurusView.desktop .
  - cd ..
  - wget -c "https://github.com/probonopd/linuxdeployqt/releases/download/3/linuxdeployqt-3-x86_64.AppImage"
  - chmod a+x linuxdeployqt*.AppImage
  - unset QTDIR; unset QT_PLUGIN_PATH ; unset LD_LIBRARY_PATH
  - ./linuxdeployqt*.AppImage ./appdir/usr/bin/* -bundle-non-qt-libs
  - ./linuxdeployqt*.AppImage ./appdir/usr/bin/* -appimage
  - curl --upload-file ./KurusView*.AppImage https://transfer.sh/KurusView-git.$(git rev-parse --short HEAD)-x86_64.AppImage
  - cmake .
  - make
  - make test

# After successfully building and testing your software we give Doxygen the
# instruction to scan the code for docstrings and generate the html output.
# The bulk of these instructions is encapsulated in a script.
after_success:
  - cd $TRAVIS_BUILD_DIR
  - chmod +x generateDocumentationAndDeploy.sh
  - ./generateDocumentationAndDeploy.sh
