# Travis CI Job Lifecycle
#  1 - apt addons (OPTIONAL)
#  2 - cache components (OPTIONAL)
#  3 - before_install
#  4 -- install
#  5 - before_script
#  6 -- script
#  7 - before_cache (if and only if caching is effective)
#  8 - after_success (Runs if script was successful) OR after_failure (Runs if script failed)
#  9 - before-deploy (OPTIONAL)
# 10 - deploy (OPTIONAL)
# 11 - after-deploy (OPTIONAL)
# 12 - after_script

sudo: false
language: cpp
branches:
  only:
    - master

# These variables will be used in generateDocumentationAndDeploy.sh
# (see below). They tell Doxygen where to find the source on and where to send
# the generated documentation.
env:
  global:
    - GH_REPO_NAME: "2020_GROUP_21"
    - DOXYFILE: $TRAVIS_BUILD_DIR/Doxyfile
    - GH_REPO_REF: github.com/KurusView/2020_GROUP_21.git

# The virtual machines created by Travis do not by default have doxygen
# installed. This is fortunately not difficult on a Debian flavoured Linux
# system.
addons:
  apt:
    packages:
      - doxygen
      - graphviz
      - g++-9

before_install: eval "CC=gcc-9 CXX=g++-9"

# Build project with tests enabled
script:
  - cmake -DENABLE_TESTS=ON .
  - make
  - make test

# Tell doxygen to scan the code for docstrings and generate the html output.
# The bulk of these instructions is encapsulated in a script.
after_success:
  - cd $TRAVIS_BUILD_DIR
  - chmod +x generateDocumentationAndDeploy.sh
  - ./generateDocumentationAndDeploy.sh
